############################################################
# HEAVILY inspired by Andrew Welch's config
# https://github.com/nystudio107/nginx-craft
############################################################

index index.php index.html index.htm;
charset utf-8;

# 404 error handler
error_page 404 /index.php?$query_string;

# 301 Redirect URLs with trailing /'s as per https://webmasters.googleblog.com/2010/04/to-slash-or-not-to-slash.html
rewrite ^/(.*)/$ /$1 permanent;

# Change // -> / for all URLs, so it works for our php location block, too
merge_slashes off;
rewrite (.*)//+(.*) $1/$2 permanent;

# For WordPress bots/users
location ~ ^/(wp-login|wp-admin|wp-config|wp-content|wp-includes|(.*)\.exe) {
    return 301 https://wordpress.com/wp-login.php;
}

# Handle Do Not Track as per https://www.eff.org/dnt-policy
location /.well-known/dnt-policy.txt {
    try_files /dnt-policy.txt /index.php?p=/dnt-policy.txt;
}

# Don't send the nginx version number in error pages and Server header
server_tokens off;


# Load configuration files from nginx-partials
############################################################
# STOP AND REPLACE
# Update path to partials
# include /etc/nginx-sp/vhosts.d/APPNAME.d/partials/*.conf;
############################################################
include /etc/nginx-sp/vhosts.d/cityofmarion-staging.d/partials/*.conf;


# Don't serve hidden files.
location ~ /\. {
    deny all;
}

location = /favicon.ico {
    log_not_found off;
}


# Root directory location handler
location / {
    try_files $uri/index.html $uri $uri/ /index.php?$query_string;
}

# 301 Redirects
map $request_uri $redirect_uri {
    /?q=node/3 /government;
    /?q=node/575 /government/minutes-agendas;
    /?q=node/575 /government/minutes-agendas/common-council;
    /?q=node/206 /government/boards-commissions;
    /?q=node/598 /government/boards-commissions/board-of-public-works-safety;
    /?q=node/134 /government/boards-commissions/board-of-zoning-appeals;
    /?q=node/133 /government/boards-commissions/city-plan-commission;
    /?q=node/100 /government/boards-commissions/common-council;
    /?q=node/124 /government/boards-commissions/parks-recreation-board;
    /?q=node/248 /government/boards-commissions/redevelopment-commission;
    /?q=node/120 /government/boards-commissions/traffic-commission;
    /?q=node/3 /government/departments;
    /?q=node/5 /government/departments/animal-care-control;
    /?q=node/454 /government/departments/animal-care-control/fees;
    /?q=node/38 /government/departments/animal-care-control/how-you-can-help;
    /?q=node/79 /government/departments/animal-care-control/report-animal-issues;
    /?q=node/11 /government/departments/building-department;
    /?q=node/98 /government/departments/city-clerk-court;
    /?q=node/83 /government/departments/city-clerk-court;
    /?q=node/13 /government/departments/city-hall;
    /?q=node/10 /government/departments/city-planning;
    /?q=node/4 /government/departments/city-planning/planning-documents;
    /?q=node/224 /government/departments/city-planning/applications-fees;
    /?q=node/225 /government/departments/city-planning/zoning-information;
    /?q=node/23 /government/departments/citywide-maintenance;
    /?q=node/9 /government/departments/code-enforcement;
    /?q=node/135 /government/departments/code-enforcement/top-code-violations;
    /?q=node/126 /government/departments/community-development-marketing;
    /?q=node/82 /government/departments/community-development-marketing/neighborhood;
    /?q=node/12 /government/departments/controller;
    /?q=node/126 /government/departments/ecoomic-development/properties-for-sale;
    /?q=node/15 /government/departments/engineering-traffic;
    /?q=node/106 /government/departments/engineering-traffic/obstruction-permits;
    /?q=node/435 /government/departments/engineering-traffic/marion-ada;
    /?q=node/85 /government/departments/engineering-traffic/storm-water-pollution-control;
    /?q=node/16 /government/departments/fire;
    /?q=node/218 /government/departments/fire/life-saving-courses;
    /?q=node/17 /government/departments/human-resources;
    /?q=node/18 /government/departments/information-technology;
    /?q=node/20 /government/departments/mayor;
    /?q=node/126 /government/departments/economic-development;
    /?q=node/21 /government/departments/parks-recreation;
    /?q=node/202 /government/departments/parks-recreation/splash-house;
    /?q=node/189 /government/departments/parks-recreation/walkway-of-lights;
    /?q=node/22 /government/departments/police;
    /?q=node/491 /government/departments/police/victims-advocate;
    /?q=node/24 /government/departments/transportation;
    /?q=node/82 /government/departments/community-development-marketing/neighborhood;
    /?q=node/199 /government/departments/economi-development/city-properties;
    /?q=node/27 /contact;
    /?q=node/6 /about;
    /?q=node/20 /government/departments/mayor/about;
}


# Localized sites, hat tip to Johannes -- https://gist.github.com/johanneslamers/f6d2bc0d7435dca130fc

# If you are creating a localized site as per: https://craftcms.com/docs/localization-guide
# the directives here will help you handle the locale redirection so that requests will
# be routed through the appropriate index.php wherein you set the `CRAFT_LOCALE`

# Enable this by un-commenting it, and changing the language codes as appropriate
# Add a new location @XXrewrites and location /XX/ block for each language that
# you need to support

#location @enrewrites {
#    rewrite ^/en/(.*)$ /en/index.php?p=$1? last;
#}
#
#location /en/ {
#    try_files $uri $uri/ @enrewrites;
#}


# Craft-specific location handlers to ensure AdminCP requests route through index.php
# If you change your `cpTrigger`, change it here as well
location ^~ /admin {
    try_files $uri $uri/ /index.php?$query_string;
}
location ^~ /cpresources {
    try_files $uri $uri/ /index.php?$query_string;
}



location ~ \.php$ {
  try_files $uri $uri/ /index.php?$query_string;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;

  # Removing Apache from the stack
  # https://serverpilot.io/community/articles/how-to-create-a-lemp-stack-only-nginx-no-apache.html
  ############################################################
  # STOP AND REPLACE
  # You must replace "SYSUSER" with the app's system user's name
  # and "APPNAME" with your app's name.
  # fastcgi_pass  unix:/srv/users/SYSUSER/run/APPNAME.php-fpm.sock;
  ############################################################
  fastcgi_pass  unix:/srv/users/serverpilot/run/cityofmarion-staging.php-fpm.sock;


  ############################################################
  # STOP AND REPLACE
  # Update path to partials
  # include /etc/nginx-sp/vhosts.d/APPNAME.d/fastcgi-vars/*.conf;
  ############################################################
  include /etc/nginx-sp/vhosts.d/cityofmarion-staging.d/fastcgi-vars/*.conf;


  fastcgi_index index.php;
  include fastcgi_params;

  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  fastcgi_param PATH_INFO $fastcgi_path_info;
  fastcgi_param HTTP_PROXY "";

  fastcgi_intercept_errors off;
  fastcgi_buffer_size 16k;
  fastcgi_buffers 4 16k;
  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
}

# Disable reading of Apache .htaccess files
location ~ /\.ht {
  deny all;
}

# Misc settings
sendfile off;
client_max_body_size 100m;
